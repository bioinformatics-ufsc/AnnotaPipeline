#############################################
###   AnnotaPipeline CONFIGURATION FILE   ###
#############################################

# IMPORTANT NOTES --------------------------------------------------------------

# Replace variables of each program according to your analysis
# Possible values are included between brackets and separated by '/':
#   EXAMPLE: [ option-a / option-b / option-c ]

# Output flags from each program are not listed: they are generic and named after your given basename
# FLAGS THAT ARE NOT LISTED, HAVE NOT BEEN TESTED: you can *try*, but results are not guaranteed
#   For flags that are not listed, please inform it in a short way, when it's possible.
#   Software usually have 2 ways to pass an argument, with - or --
#   We normally use the first one, because... why not?

# A AVENTURA VAI COMEÃ‡AR -------------------------------------------------------

pipeline:
  python: python3  # [path] full path to python interpreter (>=3.6)
  perl: perl       # [path] full path to perl interpreter (required for augustus)
  threads: 8                # [int] number of threads to run all programs (default: 8)
  organism:                 # EXAMPLE: Homo sapiens
  basename:                 # EXAMPLE: Hsapiens
  keywords:                 # specific keywords to classify each hsp found in blast as "hypothetical"
    - fragment
    - hypothetical
    - partial
    - uncharacterized
    - unknown
    - unspecified

# DATABASES --------------------------------------------------------------------

databases:
  swissprot-db: /full/path/to/swissprot.db
  secondary-db:       # [path] full path to secondary database [accepted any of eupathdb], nrdb or trembl
  secondary-format:   # file formatted as [ eupathdb / nrdb / trembldb ]
  cdd-db:             # [path] full path to cdd database
  pfam:               # [path] full path to pfam hmm profile

# AUGUSTUS ---------------------------------------------------------------------

augustus:
  augustus-path: conda  # if you are using our conda environment, set "conda"
                        # and we will find augustus path
  strand:               # [ both / forward / backward ]
  genemodel:            # [ partial / intronless / complete / atleastone / exactlyone ]
  species:              # based on species within /path/to/augustus/config/species
  protein:              # [ on / off ]
  introns:              # [ on / off ]
  start:                # [ on / off ]
  stop:                 # [ on / off ]
  cds:                  # [ on / off ]

# following options have *not* been tested in AnnotaPipeline (leave empty to disconsider)
#   if you pass a flag that by default doesn't have a value please inform "value: flag"
#   EXAMPLE:
#     goterms: flag
augustus-optional:
  hintsfile:          # [path] full path to hintsfile.gff
                      # OPTIONAL: prediction considers hints (extrinsic information) if turned on
  extrinsicCfgFile:   # [path] full path to cfgfile
                      # OPTIONAL: file contains the list of used sources for the hints and their boni and mali
  UTR:                # [ on / off ]
                      # OPTIONAL: currently *only* works for human, galdieria, toxoplasma and caenorhabditis

# SEQUENCE CLEANER -------------------------------------------------------------

seq-cleaner:
  minsize-seq:     # [int] minimal size for input sequences

# BLAST ------------------------------------------------------------------------

# blast will run *exclusively* with these parameters (any others will be ignored)
local-aligner:
  blast-exe: blastp
  evalue:       # [float] e-value (default: 0.00001)
  identity:     # [int] identity threshold to filter blast results
  positivity:   # [int] positivity threshold to filter blast results
  coverage:     # [int] query coverage threshold to filter blast results
                #       use a higher value for more restrict results (default: 30)
  max_target_seqs:      # [int] exact number of alignments (recommended: 10)

# RPSBLAST runs by default with:
#   [-outfmt "6 qseqid sseqid sacc bitscore evalue ppos pident qcovs stitle"]
#   these flags are not listed
rpsblast:
  rpsblast-exe: rpsblast
  evalue:    # [float] e-value (default: 1e-5)
  max_target_seqs:   # [int] maximum number of high scoring pairs

# INTERPROSCAN/HMMER -----------------------------------------------------------

# interproscan runs default parameters (these flags are not listed):
#   -f GFF3
#   -t p
#   -goterms
#   -iprlookup
# if you pass a flag that by default doesn't have a value please inform "value: flag"
# EXAMPLE:
#   goterms: flag
interproscan:
  interproscan-exe: interproscan.sh
  ms:     # OPTIONAL: minimum nucleotide size

hmmer:
  hmmscan-exe: hmmscan
  E:      # e-value [1e-n] (n is an integer)
  domE:   # filter per-domain output based on evalue [1e-n] (n is an integer)

# KALLISTO/RNA-seq -------------------------------------------------------------

# kallisto is OPTIONAL
#   add kallisto to "kallisto-exe" to run this analysis
# WARNINGS:
#   flags -l and -s are required for single-end data
#     if one file was given in rna-seq, provide a value for these parameters
#   do not fill if you don't want to use these flags with paired-end data
kallisto:
  kallisto-exe:  # [path] kallisto
  # FILE(s): path to rna-seq reads
  #          2 files for paired-end data OR 1 file for single-end data
  # EXAMPLE:
  #   rna-seq:
  #     - /path/to/R1.fastq
  #     - /path/to/R2.fastq
  rna-seq:
    - 
  l:              # [float] estimated average fragment length
  s:              # [float] estimated standard deviation of fragment length
  # tpm threshold to parse kallisto output [ mean / median / value ] (choose only one)
  # EXAMPLE (calculated):
  #   threshold: mean
  # EXAMPLE (calculated):
  #   threshold: median
  # EXAMPLE (user input):
  #   threshold: 297.83
  threshold:      # [ mean / median / value ] we use this as cutoff for parsing
  bootstrap: 0    # [int] default is 0

# COMET/PERCOLATOR -------------------------------------------------------------

# comet is OPTIONAL but requires percolator
#   add comet to "comet-exe" to run this analysis
proteomics:
  comet-exe:               # [path] comet
  comet-params:            # [path] full path to comet.params
  comet-spectrometry:      # [path] full path to directory containing mass spectrometry files
  comet-ext:               # [extension] mass spectrometry file extension
                           # WARNING:    provide only one type
                           # FORMATS:    mzXML, mzML, Thermo raw, mgf, and ms2 variants (cms2, bms2, ms2)
  # WARNING: first is required if last is given and vice-versa
  #          last must be higher than first
  first:                   # [int] specify the first/start scan to search
                           #       overriding entry in parameters file
  last:                    # [int] specify the last/end scan to search
                           #       overriding entry in parameters file
  percolator-exe: percolator # [path] /full/path/to/percolator
  percolator-qvalue: 0.05  # [float] parse percolator output by qvalue (<=) between 0 and 1 (default: 0.05)
