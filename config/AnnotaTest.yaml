#############################################
###   AnnotaPipeline CONFIGURATION FILE   ###
#############################################

# IMPORTANT NOTES --------------------------------------------------------------

# Replace variables of each program according to your analysis
# Possible values are included between brackets and separated by '/':
#   EXAMPLE: [ option-a / option-b / option-c ]

# Output flags from each program are not listed: they are generic and named after your given basename
# FLAGS THAT ARE NOT LISTED, HAVE NOT BEEN TESTED: you can *try*, but results are not guaranteed
#   For flags that are not listed, please inform it in a short way, when it's possible.
#   Software usually have 2 ways to pass an argument, with - or --
#   We normally use the first one, because... why not?

# A AVENTURA VAI COMEÃ‡AR -------------------------------------------------------

pipeline:
  python: /usr/bin/python3  # [path] full path to python interpreter (>=3.6)
  perl: /usr/bin/perl       # [path] full path to perl interpreter (required for augustus)
  threads: 8               # [int] number of threads to run all programs (default: 8)
  organism: Trypanosoma rangeli SC58
  basename: TrangeliSC58
  keywords:
    - fragment
    - hypothetical
    - partial
    - uncharacterized
    - unknown
    - unspecified

# DATABASES --------------------------------------------------------------------

databases:
  swissprot-db: /bases_externas/SwissProt_11_2019/uniprot_sprot.fasta
  secondary-db: /bases_externas/TriTrypDB_v46_11_2019/TriTrypDB_v46_11_2019_Prot.fasta
  secondary-format: eupathdb
  cdd-db: /bases_externas/interproscan-5.52-86.0/data/cdd/3.18/db/Cdd_NCBI
  pfam: /bases_externas/interproscan-5.52-86.0/data/pfam/33.1/pfam_a.hmm

# AUGUSTUS ---------------------------------------------------------------------
augustus:
  augustus-path: conda          # if you are using our conda environment, set "conda"
                                # and we will find augustus path
  strand: both                  # [ both / forward / backward ]
  genemodel: intronless         # [ partial / intronless / complete / atleastone / exactlyone ]
  species: trypanosoma_rangeli  # based on species within /path/to/augustus/config/species
  protein: on                   # [ on / off ]
  introns: on                   # [ on / off ]
  start: on                     # [ on / off ]
  stop: on                      # [ on / off ]
  cds: on                       # [ on / off ]

# following options have *not* been tested in AnnotaPipeline (leave empty to deconsider)
#   if you pass a flag that by default doesn't have a value please inform "value: flag"
#   EXAMPLE:
#     goterms: flag
augustus-optional:
  hintsfile:          # [path] full path to hintsfile.gff
                      # OPTIONAL: prediction considers hints (extrinsic information) if turned on
  extrinsicCfgFile:   # [path] full path to cfgfile
                      # OPTIONAL: file contains the list of used sources for the hints and their boni and mali
  UTR:                # [ on / off ]
                      # OPTIONAL: currently *only* works for human, galdieria, toxoplasma and caenorhabditis

# SEQUENCE CLEANER -------------------------------------------------------------

seq-cleaner:
  minsize-seq: 0     # [int] minimal size for input sequences

# BLAST ------------------------------------------------------------------------

# blast will run *exclusively* with these parameters (any others will be ignored)
local-aligner:
  blast-exe: blastp
  evalue: 0.00001    # [float] e-value (default: 0.00001)
  identity: 40    # [int] identity threshold to filter blast results
  positivity: 60  # [int] positivity threshold to filter blast results
  coverage: 30    # [int] query coverage threshold to filter blast results
                  #       use a higher value for more restrict results (default: 30)
  max_hsps: 10     # [int] exact number of alignments (recommended: 10)

# RPSBLAST runs by default with:
#   [-outfmt "6 qseqid sseqid sacc bitscore evalue ppos pident qcovs stitle"]
#   these flags are not listed
rpsblast:
  rpsblast-exe: rpsblast
  evalue: 0.00001  # [float] e-value (default: 1e-5)
  # OPTIONAL PARAMETERS (remove if not used)
  max_hsps: 10   # [int] maximum number of high scoring pairs

# INTERPROSCAN/HMMER -----------------------------------------------------------

# interproscan runs default parameters (these flags are not listed):
#   -f GFF3
#   -t p
#   -goterms
#   -iprlookup
# if you pass a flag that by default doesn't have a value please inform "value: flag"
# EXAMPLE:
#   goterms: flag
interproscan:
  interproscan-exe: interproscan.sh
  ms:     # OPTIONAL: minimum nucleotide size

hmmer:
  hmmscan-exe: hmmscan
  E: 1e-5     # e-value [1e-n] (n is an integer)
  domE: 1e-5  # filter per-domain output based on evalue [1e-n] (n is an integer)

# KALLISTO/RNA-seq -------------------------------------------------------------

# kallisto is OPTIONAL
# WARNINGS:
#   flags -l and -s are required for single-end data
#     if one file was given in rna-seq, provide a value for these parameters
#   do not fill if you don't want to use these flags with paired-end data
kallisto:
  kallisto-exe: kallisto
  # FILE(s): path to rna-seq reads
  #          2 files for paired-end data or 1 file for single-end data
  # EXAMPLE:
  #   rna-seq: >-
  #     /path/to/R1.fastq
  #     /path/to/R2.fastq
  rna-seq:
    - /bruto/DadosBioinfo/Dados_GuiMaia/TrangeliSC58/Transcriptome/Trangeli_RNAdataR1_05aug2021.fastq
    - /bruto/DadosBioinfo/Dados_GuiMaia/TrangeliSC58/Transcriptome/Trangeli_RNAdataR2_05aug2021.fastq              
  l:               # [float] estimated average fragment length
  s:               # [float] estimated standard deviation of fragment length
# tpm threshold to parse kallisto output [ mean / median / value ] (choose only one)
# EXAMPLE (calculated):
#   threshold: mean
# EXAMPLE (calculated):
#   threshold: median
# EXAMPLE (user input):
#   threshold: 297.83
  threshold: mean  # [ mean / median / value ] we use this as cutoff for parsing
  bootstrap: 1000  # [int] default is 0

# COMET/PERCOLATOR -------------------------------------------------------------

# comet is OPTIONAL but requires percolator
proteomics:
  comet-exe: comet            # [path] /full/path/to/comet
  comet-params: /home/vilmar/teste_env/GENOME/comet.params
  comet-spectometry: /bruto/DadosBioinfo/Dados_GuiMaia/TrangeliSC58/Proteome/
  comet-ext: mzXML            # [extension] mass spectometry file extension
                              # WARNING:    provide only one type
                              # FORMATS:    mzXML, mzML, Thermo raw, mgf, and ms2 variants (cms2, bms2, ms2)
  # WARNING: first is required if last is given and vice-versa
  #          last must be higher than first
  first: 200                  # [int] specify the first/start scan to search
                              #       overriding entry in parameters file
  last: 2000                  # [int] specify the last/end scan to search
                              #       overriding entry in parameters file
  percolator-exe: percolator  # [path] /full/path/to/percolator
  percolator-qvalue: 0.5     # [float] parse percolator output by qvalue (<=) between 0 and 1 (default: 0.05)
