#############################################
###   AnnotaPipeline CONFIGURATION FILE   ###
#############################################

# IMPORTANT NOTES --------------------------------------------------------------

# Replace variables of each program according to your analysis
# Possible values are included between brackets and separated by '/':
#   EXAMPLE: [ option-a / option-b / option-c ]

# Output flags from each program are not listed: they are generic and named after your given basename
# FLAGS THAT ARE NOT LISTED, HAVE NOT BEEN TESTED: you can *try*, but results are not guaranteed

# A AVENTURA VAI COMEÃ‡AR -------------------------------------------------------

pipeline:
  python: /usr/bin/python3    # [path] full path to python interpreter (>=3.6) 
  perl: /usr/bin/perl         # [path] full path to perl interpreter (required for augustus)
  threads: 8                  # [int] number of threads to run all programs (default: 8)
  organism:                   # EXAMPLE: Genus species
  basename:                   # EXAMPLE: Gspecies
  keywords: >-                # specific keywords to classify each hsp found in blast as "hypothetical"
    fragment, hypothetical, partial, uncharacterized, unknown, unspecified

databases:
  swissprot-db: /full/path/to/swissprot.db
  secondary-db:       # [path] secondary database [accepted any of eupathdb], nrdb or trembldb
  secondary-format:   # file formatted as [ eupathdb / nrdb / trembldb ]
  cdd-db:
  pfam:

interproscan:
  interproscan-exe: /full/path/to/interproscan.sh
  ms:   # OPTIONAL: minimum nucleotide size

hmmer:
  hmmscan: /full/path/to/hmmscan
  E:      # e-value [1e-n] (n is an integer)
  domE:   # filter per-domain output based on evalue [1e-n] (n is an integer)

augustus:
  augustus-exe: /full/path/to/augustus/bin/augustus
  augustus-config: /full/path/to/augustus/config
  strand:             # [ both / forward / backward ]
  genemodel:          # [ partial / intronless / complete / atleastone / exactlyone ]
  species:            # based on species within /path/to/augustus/config/species
  protein:            # [ on / off ]
  introns:            # [ on / off ]
  start:              # [ on / off ]
  stop:               # [ on / off ]
  cds:                # [ on / off ]
  # following options have *not* been tested in AnnotaPipeline (leave empty to deconsider)
  hintsfile:          # [path] /full/path/to/hintsfile.gff
                      # OPTIONAL: prediction considers hints (extrinsic information) if turned on
  extrinsicCfgFile:   # [path] /full/path/to/cfgfile
                      # OPTIONAL: file contains the list of used sources for the hints and their boni and mali
  UTR:                # [ on / off ]
                      # OPTIONAL: currently *only* works for human, galdieria, toxoplasma and caenorhabditis

seq-cleaner:
  minsize-seq:      # [int] minimal size for input sequences
  clean-percent:    # [int] minimal % of unknown nucleotides (N)

local-aligner:
  blast: /full/path/to/blast
  evalue: 1e-5  # [float] e-value (default: 0.00001)
  identity:     # [int] identity threshold to filter blast results
  positivity:   # [int] positivity threshold to filter blast results
  coverage: 30  # [int] query coverage threshold to filter blast results
                #       for a more restrict search, use a higher value (default: 30)
  hsp-max: 10   # [int] exact number of alignments (recommended: 10)

# RPSBLAST runs by default with:
#   [-outfmt "6 qseqid sseqid sacc bitscore evalue ppos pident qcovs stitle"]
#   these flags are not listed
rpsblast:
  evalue:    # [float] e-value
  hsp-max:   # maximum number of high scoring pairs

kallisto:
  kallisto-exe: /full/path/to/kallisto
  rna-seq:      # FILE(s): path to rna-seq reads
                #          2 files for paired-end data or 1 file for single-end data
                # EXAMPLE: rna-seq: /path/to/R1.fastq /path/to/R2.fastq
  l:            # [float] estimated average fragment length
  s:            # [float] estimated standard deviation of fragment length
  threshold:    # [ median / mean ]
                # calculate TPM mean from Kallisto abundance file and use this value as cutoff
  value:        # [float] use specific tpm value from kallisto abundance file as cutoff
                #         EXAMPLE: value = 297.83
  bootstrap: 0  # [int] default is 0

# comet is OPTIONAL but requires percolator
proteomics:
  percolator: percolator   # [path] full path to executable
  percolator-qvalue: 0.05  # [float] parse percolator output by qvalue (<=) between 0 and 1 (default: 0.05)
  comet-exe: comet         # [path] full path to executable
  comet-params: /full/path/to/comet.params
  comet-spectometry:       # [path] full path to directory containing mass spectometry files
  comet-ext:               # [extension] mass spectometry files extension
                           # WARNING:    provide only one type
                           # FORMATS:    mzXML, mzML, Thermo raw, mgf, and ms2 variants (cms2, bms2, ms2)
  # SCAN RANGE -----------------------------------------------------------------
  # | WARNING: first is required if last is given and vice-versa               |
  # |          last must be higher than first                                  |
  # ----------------------------------------------------------------------------
  first:                   # [int] specify the first/start scan to search
                           #       overriding entry in parameters file
  last:                    # [int] specify the last/end scan to search
                           #       overriding entry in parameters file